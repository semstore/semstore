<?php

/**
 * @author Generated by Data Object Generator
 * @version 1.0
 */

require_once('Database/Abstraction/AttributeMappedDataObject.class.php');

class product_galleryDataObject extends AttributeMappedDataObject
{
        /*
	 * Class Constants
	 */
	
        
	function TABLE () { return 'product_gallery'; }
	function PRIMARY_KEY () { return 'id'; }
	
        function FIELD_LIST () { return array(
                 'id',
                 'product_id',
                ); }
                
        function ATTRIBUTE2FIELD_MAP () { return array(
                'id' => 'id',
                'product_id' => 'product_id',
                ); }
        
        function ATTRIBUTE2FIELD_CONV () { return array(); }
        function FIELD2ATTRIBUTE_CONV () { return array(); }
        
        
        /*
	 * Class Variables
	 */
        
        
	/*
	 * Instance Variables
	 */
        
	var $id = '';
	var $product_id = '';

        /*
	 * Class Methods
	 */
        
        
        /*
	 * Constructors
	 */
	 
	 
        function product_galleryDataObject ()
        {
                $numArgs = func_num_args();
                $args = func_get_args();
                call_user_func_array(
                        array(&$this, '_product_galleryDataObject'.$numArgs),
                        $args);
        }
        
        
        function _product_galleryDataObject0 ()
        {
                $this->_initialize();
        }
        
        
        /*
	 * Accessor & Mutator Methods
	 */
	 
	 
	function setid( $tempid )
	{	
		$this->id = $tempid;
	}
	
	function getid()
	{	
		return $this->id;
	}
	
	function setproduct_id( $tempproduct_id )
	{	
		$this->product_id = $tempproduct_id;
	}
	
	function getproduct_id()
	{	
		return $this->product_id;
	}
	

        /*
	 * Command Methods
	 */
        
        
        function &_instantiateDataObject ()
        {
                $obj =& new product_galleryDataObject();
                
                return $obj;
        }
        
        
        function _postinsert ( &$connection )
        {
                $this->setid($connection->getLastInsertId());
        }
        
}

?>
